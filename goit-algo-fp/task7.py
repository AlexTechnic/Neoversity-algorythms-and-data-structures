""" Симуляція кидків двох кубиків та підрахунок ймовірностей суми, використовуючи метод Монте-Карло. 
Метод Монте-Карло - це статистичний метод, який використовує випадкові числа для вирішення задач, 
які можуть бути складні або неможливі для розв'язання аналітично. """


import random
import matplotlib.pyplot as plt


def monte_carlo_simulation(num_trials):
    """Симуляція кидків двох кубиків і підрахунок частот можливих сум."""
    sums_count = {i: 0 for i in range(2, 13)}  # Ініціалізація лічильників для кожної суми від 2 до 12

    for _ in range(num_trials):
        die1 = random.randint(1, 6)  # Випадкове число на першому кубику
        die2 = random.randint(1, 6)  # Випадкове число на другому кубику
        sum_dice = die1 + die2
        sums_count[sum_dice] += 1  # Збільшення лічильника для відповідної суми

    # Підрахунок ймовірностей (у відсотках)
    probabilities = {sum_val: (count / num_trials) * 100 for sum_val, count in sums_count.items()}
    
    return sums_count, probabilities

def plot_probabilities(probabilities):
    """Побудова графіка ймовірностей для кожної суми."""
    sums = list(probabilities.keys())
    probs = list(probabilities.values())

    plt.figure(figsize=(10, 6))
    plt.bar(sums, probs, color='skyblue')
    plt.xlabel('Сума на кубиках')
    plt.ylabel('Ймовірність (%)')
    plt.title('Ймовірності сум при киданні двох кубиків (Метод Монте-Карло)')
    plt.xticks(sums)
    plt.show()

# Кількість симуляцій (велику кількість для точного результату)
num_trials = 1000000

# Виконання симуляції та отримання результатів
sums_count, probabilities = monte_carlo_simulation(num_trials)

# Побудова графіка ймовірностей
plot_probabilities(probabilities)

# Аналітичні значення ймовірностей для порівняння (теоретичні)
analytical_probabilities = {
    2: 2.78,
    3: 5.56,
    4: 8.33,
    5: 11.11,
    6: 13.89,
    7: 16.67,
    8: 13.89,
    9: 11.11,
    10: 8.33,
    11: 5.56,
    12: 2.78
}

# Порівняння аналітичних та отриманих значень ймовірностей
print("\nПорівняння аналітичних та отриманих значень вірогідних сум при киданні двох кубиків (метод Монте-Карло):")
print("Сума | Аналітична (%) | Отримана (%)")
for sum_val in sorted(probabilities.keys()):
    print(f"{sum_val:4} | {analytical_probabilities[sum_val]:14.2f}% | {probabilities[sum_val]:12.2f}%")


""" Результати симуляції:

Порівняння аналітичних та отриманих значень вірогідних сум при киданні двох кубиків (метод Монте-Карло):

Сума | Аналітична (%) | Отримана (%)
   2 |           2.78% |         2.77%
   3 |           5.56% |         5.51%
   4 |           8.33% |         8.36%
   5 |          11.11% |        11.09%
   6 |          13.89% |        13.89%
   7 |          16.67% |        16.69%
   8 |          13.89% |        13.92%
   9 |          11.11% |        11.13%
  10 |           8.33% |         8.31%
  11 |           5.56% |         5.53%
  12 |           2.78% |         2.80%

"""
